#there is cachematrix function where x is a square invertable matrix and j matrix is a null, x is the function of y, then j
is set to inverse.

Cachematrix <- function(x = matrix()) {
  j <- NULL
  set <- function(y){
  x <<- y
  j <<- NULL
  }
  get <- function()x
  setInverse <- function(inverse) j <<- inverse
  getInverse <- function() j 
  list(set = set, get = get, 
  setInverse = setInverse, 
  getInverse = getInverse)
}


#to Return a matrix that is the inverse of 'x', cache solve is the other function of x and tatata, given x to get the inverse of j
if j is null, then j will be returned.

cacheSolve <- function(x, ...) {
  j <- x$getInverse()
  if(!is.null(j)){
  message("getting cached data")
  return(j)
  }
  mat <- x$get()
  j <- solve(mat,...)
  x$setInverse(j)
  j
}
